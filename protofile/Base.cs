// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: base.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Usercmd {

  /// <summary>Holder for reflection information generated from base.proto</summary>
  public static partial class BaseReflection {

    #region Descriptor
    /// <summary>File descriptor for base.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpiYXNlLnByb3RvEgd1c2VyY21kIhsKC0xvZ2luQzJTTXNnEgwKBG5hbWUY",
            "ASABKAkiHwoLTG9naW5TMkNNc2cSEAoIcGxheWVySWQYASABKA0iEAoOSW50",
            "b1Jvb21DMlNNc2ciIAoOSW50b1Jvb21TMmNNc2cSDgoGUm9vbUlkGAEgASgN",
            "IrEBCgxCYXR0bGVFbnRpdHkSEAoIUG9zSW5kZXgYASABKA0SEgoKRW50aXR5",
            "VHlwZRgCIAEoDRIOCgZIZWFsdGgYAyABKA0SFgoOUGh5c2ljYWxBdHRhY2sY",
            "BCABKA0SEwoLTWFnaWNBdHRhY2sYBSABKA0SFgoOUGh5c2ljYWxEZWZlbmQY",
            "BiABKA0SEwoLTWFnaWNEZWZlbmQYByABKA0SEQoJTW92ZVNwZWVkGAggASgN",
            "IkgKHUNyZWF0ZUFsbEJhdHRsZUVudGl0aWVzUzJDTXNnEicKCGVudGl0aWVz",
            "GAEgAygLMhUudXNlcmNtZC5CYXR0bGVFbnRpdHkibwoOVHVybkluZm9TMkNN",
            "c2cSFAoMQmlnVHVybkluZGV4GAEgASgNEhYKDlNtYWxsVHVybkluZGV4GAIg",
            "ASgNEhkKEUN1ckVudGl0eVBvc0luZGV4GAMgASgNEhQKDE9wZXJhdGlvblNl",
            "dBgEIAMoDSI9ChNDYXN0T3BlcmF0aW9uQzJTTXNnEhMKC09wZXJhdGlvbklk",
            "GAEgASgNEhEKCVRhcmdldElkcxgCIAMoDSIXChVPcGVyYXRpb25SZXN1bHRT",
            "MkNNc2cqrgEKB1VzZXJDbWQSDAoITG9naW5SZXEQABIMCghMb2dpblJlcxAB",
            "Eg8KC0ludG9Sb29tUmVxEAISDwoLSW50b1Jvb21SZXMQAxIbChdDcmVhdGVB",
            "bGxCYXR0bGVFbnRpdGllcxAEEgwKCFR1cm5JbmZvEAUSFAoQQ2FzdE9wZXJh",
            "dGlvblJlcRAGEhYKEk9wZXJhdGlvblJlc3VsdFJlcxAHEgwKCE1heENtZElk",
            "EAgqZAoIUG9zSW5kZXgSDAoIUG9zRUxlZnQQABIOCgpQb3NFQ2VudGVyEAES",
            "DQoJUG9zRVJpZ2h0EAISDAoIUG9zQkxlZnQQAxIOCgpQb3NCQ2VudGVyEAQS",
            "DQoJUG9zQlJpZ2h0EAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Usercmd.UserCmd), typeof(global::Usercmd.PosIndex), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.LoginC2SMsg), global::Usercmd.LoginC2SMsg.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.LoginS2CMsg), global::Usercmd.LoginS2CMsg.Parser, new[]{ "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.IntoRoomC2SMsg), global::Usercmd.IntoRoomC2SMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.IntoRoomS2cMsg), global::Usercmd.IntoRoomS2cMsg.Parser, new[]{ "RoomId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.BattleEntity), global::Usercmd.BattleEntity.Parser, new[]{ "PosIndex", "EntityType", "Health", "PhysicalAttack", "MagicAttack", "PhysicalDefend", "MagicDefend", "MoveSpeed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.CreateAllBattleEntitiesS2CMsg), global::Usercmd.CreateAllBattleEntitiesS2CMsg.Parser, new[]{ "Entities" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.TurnInfoS2CMsg), global::Usercmd.TurnInfoS2CMsg.Parser, new[]{ "BigTurnIndex", "SmallTurnIndex", "CurEntityPosIndex", "OperationSet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.CastOperationC2SMsg), global::Usercmd.CastOperationC2SMsg.Parser, new[]{ "OperationId", "TargetIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Usercmd.OperationResultS2CMsg), global::Usercmd.OperationResultS2CMsg.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum UserCmd {
    [pbr::OriginalName("LoginReq")] LoginReq = 0,
    [pbr::OriginalName("LoginRes")] LoginRes = 1,
    [pbr::OriginalName("IntoRoomReq")] IntoRoomReq = 2,
    [pbr::OriginalName("IntoRoomRes")] IntoRoomRes = 3,
    [pbr::OriginalName("CreateAllBattleEntities")] CreateAllBattleEntities = 4,
    [pbr::OriginalName("TurnInfo")] TurnInfo = 5,
    [pbr::OriginalName("CastOperationReq")] CastOperationReq = 6,
    [pbr::OriginalName("OperationResultRes")] OperationResultRes = 7,
    [pbr::OriginalName("MaxCmdId")] MaxCmdId = 8,
  }

  public enum PosIndex {
    [pbr::OriginalName("PosELeft")] PosEleft = 0,
    [pbr::OriginalName("PosECenter")] PosEcenter = 1,
    [pbr::OriginalName("PosERight")] PosEright = 2,
    [pbr::OriginalName("PosBLeft")] PosBleft = 3,
    [pbr::OriginalName("PosBCenter")] PosBcenter = 4,
    [pbr::OriginalName("PosBRight")] PosBright = 5,
  }

  #endregion

  #region Messages
  public sealed partial class LoginC2SMsg : pb::IMessage<LoginC2SMsg> {
    private static readonly pb::MessageParser<LoginC2SMsg> _parser = new pb::MessageParser<LoginC2SMsg>(() => new LoginC2SMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginC2SMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginC2SMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginC2SMsg(LoginC2SMsg other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginC2SMsg Clone() {
      return new LoginC2SMsg(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginC2SMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginC2SMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginC2SMsg other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginS2CMsg : pb::IMessage<LoginS2CMsg> {
    private static readonly pb::MessageParser<LoginS2CMsg> _parser = new pb::MessageParser<LoginS2CMsg>(() => new LoginS2CMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginS2CMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginS2CMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginS2CMsg(LoginS2CMsg other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginS2CMsg Clone() {
      return new LoginS2CMsg(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private uint playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginS2CMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginS2CMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginS2CMsg other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IntoRoomC2SMsg : pb::IMessage<IntoRoomC2SMsg> {
    private static readonly pb::MessageParser<IntoRoomC2SMsg> _parser = new pb::MessageParser<IntoRoomC2SMsg>(() => new IntoRoomC2SMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntoRoomC2SMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntoRoomC2SMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntoRoomC2SMsg(IntoRoomC2SMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntoRoomC2SMsg Clone() {
      return new IntoRoomC2SMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntoRoomC2SMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntoRoomC2SMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntoRoomC2SMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class IntoRoomS2cMsg : pb::IMessage<IntoRoomS2cMsg> {
    private static readonly pb::MessageParser<IntoRoomS2cMsg> _parser = new pb::MessageParser<IntoRoomS2cMsg>(() => new IntoRoomS2cMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntoRoomS2cMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntoRoomS2cMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntoRoomS2cMsg(IntoRoomS2cMsg other) : this() {
      roomId_ = other.roomId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntoRoomS2cMsg Clone() {
      return new IntoRoomS2cMsg(this);
    }

    /// <summary>Field number for the "RoomId" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private uint roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntoRoomS2cMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntoRoomS2cMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RoomId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntoRoomS2cMsg other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleEntity : pb::IMessage<BattleEntity> {
    private static readonly pb::MessageParser<BattleEntity> _parser = new pb::MessageParser<BattleEntity>(() => new BattleEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEntity(BattleEntity other) : this() {
      posIndex_ = other.posIndex_;
      entityType_ = other.entityType_;
      health_ = other.health_;
      physicalAttack_ = other.physicalAttack_;
      magicAttack_ = other.magicAttack_;
      physicalDefend_ = other.physicalDefend_;
      magicDefend_ = other.magicDefend_;
      moveSpeed_ = other.moveSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleEntity Clone() {
      return new BattleEntity(this);
    }

    /// <summary>Field number for the "PosIndex" field.</summary>
    public const int PosIndexFieldNumber = 1;
    private uint posIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PosIndex {
      get { return posIndex_; }
      set {
        posIndex_ = value;
      }
    }

    /// <summary>Field number for the "EntityType" field.</summary>
    public const int EntityTypeFieldNumber = 2;
    private uint entityType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EntityType {
      get { return entityType_; }
      set {
        entityType_ = value;
      }
    }

    /// <summary>Field number for the "Health" field.</summary>
    public const int HealthFieldNumber = 3;
    private uint health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "PhysicalAttack" field.</summary>
    public const int PhysicalAttackFieldNumber = 4;
    private uint physicalAttack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PhysicalAttack {
      get { return physicalAttack_; }
      set {
        physicalAttack_ = value;
      }
    }

    /// <summary>Field number for the "MagicAttack" field.</summary>
    public const int MagicAttackFieldNumber = 5;
    private uint magicAttack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MagicAttack {
      get { return magicAttack_; }
      set {
        magicAttack_ = value;
      }
    }

    /// <summary>Field number for the "PhysicalDefend" field.</summary>
    public const int PhysicalDefendFieldNumber = 6;
    private uint physicalDefend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PhysicalDefend {
      get { return physicalDefend_; }
      set {
        physicalDefend_ = value;
      }
    }

    /// <summary>Field number for the "MagicDefend" field.</summary>
    public const int MagicDefendFieldNumber = 7;
    private uint magicDefend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MagicDefend {
      get { return magicDefend_; }
      set {
        magicDefend_ = value;
      }
    }

    /// <summary>Field number for the "MoveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 8;
    private uint moveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PosIndex != other.PosIndex) return false;
      if (EntityType != other.EntityType) return false;
      if (Health != other.Health) return false;
      if (PhysicalAttack != other.PhysicalAttack) return false;
      if (MagicAttack != other.MagicAttack) return false;
      if (PhysicalDefend != other.PhysicalDefend) return false;
      if (MagicDefend != other.MagicDefend) return false;
      if (MoveSpeed != other.MoveSpeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosIndex != 0) hash ^= PosIndex.GetHashCode();
      if (EntityType != 0) hash ^= EntityType.GetHashCode();
      if (Health != 0) hash ^= Health.GetHashCode();
      if (PhysicalAttack != 0) hash ^= PhysicalAttack.GetHashCode();
      if (MagicAttack != 0) hash ^= MagicAttack.GetHashCode();
      if (PhysicalDefend != 0) hash ^= PhysicalDefend.GetHashCode();
      if (MagicDefend != 0) hash ^= MagicDefend.GetHashCode();
      if (MoveSpeed != 0) hash ^= MoveSpeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PosIndex);
      }
      if (EntityType != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EntityType);
      }
      if (Health != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Health);
      }
      if (PhysicalAttack != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PhysicalAttack);
      }
      if (MagicAttack != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MagicAttack);
      }
      if (PhysicalDefend != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PhysicalDefend);
      }
      if (MagicDefend != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(MagicDefend);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(MoveSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PosIndex);
      }
      if (EntityType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityType);
      }
      if (Health != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Health);
      }
      if (PhysicalAttack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PhysicalAttack);
      }
      if (MagicAttack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MagicAttack);
      }
      if (PhysicalDefend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PhysicalDefend);
      }
      if (MagicDefend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MagicDefend);
      }
      if (MoveSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MoveSpeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleEntity other) {
      if (other == null) {
        return;
      }
      if (other.PosIndex != 0) {
        PosIndex = other.PosIndex;
      }
      if (other.EntityType != 0) {
        EntityType = other.EntityType;
      }
      if (other.Health != 0) {
        Health = other.Health;
      }
      if (other.PhysicalAttack != 0) {
        PhysicalAttack = other.PhysicalAttack;
      }
      if (other.MagicAttack != 0) {
        MagicAttack = other.MagicAttack;
      }
      if (other.PhysicalDefend != 0) {
        PhysicalDefend = other.PhysicalDefend;
      }
      if (other.MagicDefend != 0) {
        MagicDefend = other.MagicDefend;
      }
      if (other.MoveSpeed != 0) {
        MoveSpeed = other.MoveSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PosIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            EntityType = input.ReadUInt32();
            break;
          }
          case 24: {
            Health = input.ReadUInt32();
            break;
          }
          case 32: {
            PhysicalAttack = input.ReadUInt32();
            break;
          }
          case 40: {
            MagicAttack = input.ReadUInt32();
            break;
          }
          case 48: {
            PhysicalDefend = input.ReadUInt32();
            break;
          }
          case 56: {
            MagicDefend = input.ReadUInt32();
            break;
          }
          case 64: {
            MoveSpeed = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAllBattleEntitiesS2CMsg : pb::IMessage<CreateAllBattleEntitiesS2CMsg> {
    private static readonly pb::MessageParser<CreateAllBattleEntitiesS2CMsg> _parser = new pb::MessageParser<CreateAllBattleEntitiesS2CMsg>(() => new CreateAllBattleEntitiesS2CMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAllBattleEntitiesS2CMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAllBattleEntitiesS2CMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAllBattleEntitiesS2CMsg(CreateAllBattleEntitiesS2CMsg other) : this() {
      entities_ = other.entities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAllBattleEntitiesS2CMsg Clone() {
      return new CreateAllBattleEntitiesS2CMsg(this);
    }

    /// <summary>Field number for the "entities" field.</summary>
    public const int EntitiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Usercmd.BattleEntity> _repeated_entities_codec
        = pb::FieldCodec.ForMessage(10, global::Usercmd.BattleEntity.Parser);
    private readonly pbc::RepeatedField<global::Usercmd.BattleEntity> entities_ = new pbc::RepeatedField<global::Usercmd.BattleEntity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Usercmd.BattleEntity> Entities {
      get { return entities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAllBattleEntitiesS2CMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAllBattleEntitiesS2CMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entities_.Equals(other.entities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entities_.WriteTo(output, _repeated_entities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entities_.CalculateSize(_repeated_entities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAllBattleEntitiesS2CMsg other) {
      if (other == null) {
        return;
      }
      entities_.Add(other.entities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entities_.AddEntriesFrom(input, _repeated_entities_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TurnInfoS2CMsg : pb::IMessage<TurnInfoS2CMsg> {
    private static readonly pb::MessageParser<TurnInfoS2CMsg> _parser = new pb::MessageParser<TurnInfoS2CMsg>(() => new TurnInfoS2CMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TurnInfoS2CMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnInfoS2CMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnInfoS2CMsg(TurnInfoS2CMsg other) : this() {
      bigTurnIndex_ = other.bigTurnIndex_;
      smallTurnIndex_ = other.smallTurnIndex_;
      curEntityPosIndex_ = other.curEntityPosIndex_;
      operationSet_ = other.operationSet_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TurnInfoS2CMsg Clone() {
      return new TurnInfoS2CMsg(this);
    }

    /// <summary>Field number for the "BigTurnIndex" field.</summary>
    public const int BigTurnIndexFieldNumber = 1;
    private uint bigTurnIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BigTurnIndex {
      get { return bigTurnIndex_; }
      set {
        bigTurnIndex_ = value;
      }
    }

    /// <summary>Field number for the "SmallTurnIndex" field.</summary>
    public const int SmallTurnIndexFieldNumber = 2;
    private uint smallTurnIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SmallTurnIndex {
      get { return smallTurnIndex_; }
      set {
        smallTurnIndex_ = value;
      }
    }

    /// <summary>Field number for the "CurEntityPosIndex" field.</summary>
    public const int CurEntityPosIndexFieldNumber = 3;
    private uint curEntityPosIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CurEntityPosIndex {
      get { return curEntityPosIndex_; }
      set {
        curEntityPosIndex_ = value;
      }
    }

    /// <summary>Field number for the "OperationSet" field.</summary>
    public const int OperationSetFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_operationSet_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> operationSet_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> OperationSet {
      get { return operationSet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TurnInfoS2CMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TurnInfoS2CMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BigTurnIndex != other.BigTurnIndex) return false;
      if (SmallTurnIndex != other.SmallTurnIndex) return false;
      if (CurEntityPosIndex != other.CurEntityPosIndex) return false;
      if(!operationSet_.Equals(other.operationSet_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BigTurnIndex != 0) hash ^= BigTurnIndex.GetHashCode();
      if (SmallTurnIndex != 0) hash ^= SmallTurnIndex.GetHashCode();
      if (CurEntityPosIndex != 0) hash ^= CurEntityPosIndex.GetHashCode();
      hash ^= operationSet_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BigTurnIndex != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(BigTurnIndex);
      }
      if (SmallTurnIndex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SmallTurnIndex);
      }
      if (CurEntityPosIndex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CurEntityPosIndex);
      }
      operationSet_.WriteTo(output, _repeated_operationSet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BigTurnIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BigTurnIndex);
      }
      if (SmallTurnIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SmallTurnIndex);
      }
      if (CurEntityPosIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurEntityPosIndex);
      }
      size += operationSet_.CalculateSize(_repeated_operationSet_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TurnInfoS2CMsg other) {
      if (other == null) {
        return;
      }
      if (other.BigTurnIndex != 0) {
        BigTurnIndex = other.BigTurnIndex;
      }
      if (other.SmallTurnIndex != 0) {
        SmallTurnIndex = other.SmallTurnIndex;
      }
      if (other.CurEntityPosIndex != 0) {
        CurEntityPosIndex = other.CurEntityPosIndex;
      }
      operationSet_.Add(other.operationSet_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BigTurnIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            SmallTurnIndex = input.ReadUInt32();
            break;
          }
          case 24: {
            CurEntityPosIndex = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            operationSet_.AddEntriesFrom(input, _repeated_operationSet_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CastOperationC2SMsg : pb::IMessage<CastOperationC2SMsg> {
    private static readonly pb::MessageParser<CastOperationC2SMsg> _parser = new pb::MessageParser<CastOperationC2SMsg>(() => new CastOperationC2SMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CastOperationC2SMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CastOperationC2SMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CastOperationC2SMsg(CastOperationC2SMsg other) : this() {
      operationId_ = other.operationId_;
      targetIds_ = other.targetIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CastOperationC2SMsg Clone() {
      return new CastOperationC2SMsg(this);
    }

    /// <summary>Field number for the "OperationId" field.</summary>
    public const int OperationIdFieldNumber = 1;
    private uint operationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OperationId {
      get { return operationId_; }
      set {
        operationId_ = value;
      }
    }

    /// <summary>Field number for the "TargetIds" field.</summary>
    public const int TargetIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_targetIds_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> targetIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> TargetIds {
      get { return targetIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CastOperationC2SMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CastOperationC2SMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OperationId != other.OperationId) return false;
      if(!targetIds_.Equals(other.targetIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OperationId != 0) hash ^= OperationId.GetHashCode();
      hash ^= targetIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OperationId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(OperationId);
      }
      targetIds_.WriteTo(output, _repeated_targetIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OperationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OperationId);
      }
      size += targetIds_.CalculateSize(_repeated_targetIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CastOperationC2SMsg other) {
      if (other == null) {
        return;
      }
      if (other.OperationId != 0) {
        OperationId = other.OperationId;
      }
      targetIds_.Add(other.targetIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OperationId = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            targetIds_.AddEntriesFrom(input, _repeated_targetIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationResultS2CMsg : pb::IMessage<OperationResultS2CMsg> {
    private static readonly pb::MessageParser<OperationResultS2CMsg> _parser = new pb::MessageParser<OperationResultS2CMsg>(() => new OperationResultS2CMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationResultS2CMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Usercmd.BaseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationResultS2CMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationResultS2CMsg(OperationResultS2CMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationResultS2CMsg Clone() {
      return new OperationResultS2CMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationResultS2CMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationResultS2CMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationResultS2CMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
