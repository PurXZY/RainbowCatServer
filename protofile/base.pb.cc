// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base.proto

#include "base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_base_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BattleEntity_base_2eproto;
namespace usercmd {
class LoginC2SMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginC2SMsg> _instance;
} _LoginC2SMsg_default_instance_;
class LoginS2CMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoginS2CMsg> _instance;
} _LoginS2CMsg_default_instance_;
class IntoRoomC2SMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntoRoomC2SMsg> _instance;
} _IntoRoomC2SMsg_default_instance_;
class IntoRoomS2cMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntoRoomS2cMsg> _instance;
} _IntoRoomS2cMsg_default_instance_;
class BattleEntityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BattleEntity> _instance;
} _BattleEntity_default_instance_;
class CreateAllBattleEntitiesS2CMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateAllBattleEntitiesS2CMsg> _instance;
} _CreateAllBattleEntitiesS2CMsg_default_instance_;
class TurnInfoS2CMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TurnInfoS2CMsg> _instance;
} _TurnInfoS2CMsg_default_instance_;
class CastOperationC2SMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CastOperationC2SMsg> _instance;
} _CastOperationC2SMsg_default_instance_;
class OperationResultS2CMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperationResultS2CMsg> _instance;
} _OperationResultS2CMsg_default_instance_;
}  // namespace usercmd
static void InitDefaultsscc_info_BattleEntity_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_BattleEntity_default_instance_;
    new (ptr) ::usercmd::BattleEntity();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::BattleEntity::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BattleEntity_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_BattleEntity_base_2eproto}, {}};

static void InitDefaultsscc_info_CastOperationC2SMsg_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_CastOperationC2SMsg_default_instance_;
    new (ptr) ::usercmd::CastOperationC2SMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::CastOperationC2SMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CastOperationC2SMsg_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_CastOperationC2SMsg_base_2eproto}, {}};

static void InitDefaultsscc_info_CreateAllBattleEntitiesS2CMsg_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_CreateAllBattleEntitiesS2CMsg_default_instance_;
    new (ptr) ::usercmd::CreateAllBattleEntitiesS2CMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::CreateAllBattleEntitiesS2CMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateAllBattleEntitiesS2CMsg_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_CreateAllBattleEntitiesS2CMsg_base_2eproto}, {
      &scc_info_BattleEntity_base_2eproto.base,}};

static void InitDefaultsscc_info_IntoRoomC2SMsg_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_IntoRoomC2SMsg_default_instance_;
    new (ptr) ::usercmd::IntoRoomC2SMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::IntoRoomC2SMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntoRoomC2SMsg_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_IntoRoomC2SMsg_base_2eproto}, {}};

static void InitDefaultsscc_info_IntoRoomS2cMsg_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_IntoRoomS2cMsg_default_instance_;
    new (ptr) ::usercmd::IntoRoomS2cMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::IntoRoomS2cMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IntoRoomS2cMsg_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_IntoRoomS2cMsg_base_2eproto}, {}};

static void InitDefaultsscc_info_LoginC2SMsg_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_LoginC2SMsg_default_instance_;
    new (ptr) ::usercmd::LoginC2SMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::LoginC2SMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginC2SMsg_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_LoginC2SMsg_base_2eproto}, {}};

static void InitDefaultsscc_info_LoginS2CMsg_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_LoginS2CMsg_default_instance_;
    new (ptr) ::usercmd::LoginS2CMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::LoginS2CMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginS2CMsg_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_LoginS2CMsg_base_2eproto}, {}};

static void InitDefaultsscc_info_OperationResultS2CMsg_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_OperationResultS2CMsg_default_instance_;
    new (ptr) ::usercmd::OperationResultS2CMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::OperationResultS2CMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperationResultS2CMsg_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_OperationResultS2CMsg_base_2eproto}, {}};

static void InitDefaultsscc_info_TurnInfoS2CMsg_base_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::usercmd::_TurnInfoS2CMsg_default_instance_;
    new (ptr) ::usercmd::TurnInfoS2CMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::usercmd::TurnInfoS2CMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TurnInfoS2CMsg_base_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_TurnInfoS2CMsg_base_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_base_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_base_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_base_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_base_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::LoginC2SMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usercmd::LoginC2SMsg, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::LoginS2CMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usercmd::LoginS2CMsg, playerid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::IntoRoomC2SMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::IntoRoomS2cMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usercmd::IntoRoomS2cMsg, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, posindex_),
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, entitytype_),
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, health_),
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, physicalattack_),
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, magicattack_),
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, physicaldefend_),
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, magicdefend_),
  PROTOBUF_FIELD_OFFSET(::usercmd::BattleEntity, movespeed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::CreateAllBattleEntitiesS2CMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usercmd::CreateAllBattleEntitiesS2CMsg, entities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::TurnInfoS2CMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usercmd::TurnInfoS2CMsg, bigturnindex_),
  PROTOBUF_FIELD_OFFSET(::usercmd::TurnInfoS2CMsg, smallturnindex_),
  PROTOBUF_FIELD_OFFSET(::usercmd::TurnInfoS2CMsg, curentityposindex_),
  PROTOBUF_FIELD_OFFSET(::usercmd::TurnInfoS2CMsg, operationset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::CastOperationC2SMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::usercmd::CastOperationC2SMsg, operationid_),
  PROTOBUF_FIELD_OFFSET(::usercmd::CastOperationC2SMsg, targetids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::usercmd::OperationResultS2CMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::usercmd::LoginC2SMsg)},
  { 6, -1, sizeof(::usercmd::LoginS2CMsg)},
  { 12, -1, sizeof(::usercmd::IntoRoomC2SMsg)},
  { 17, -1, sizeof(::usercmd::IntoRoomS2cMsg)},
  { 23, -1, sizeof(::usercmd::BattleEntity)},
  { 36, -1, sizeof(::usercmd::CreateAllBattleEntitiesS2CMsg)},
  { 42, -1, sizeof(::usercmd::TurnInfoS2CMsg)},
  { 51, -1, sizeof(::usercmd::CastOperationC2SMsg)},
  { 58, -1, sizeof(::usercmd::OperationResultS2CMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_LoginC2SMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_LoginS2CMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_IntoRoomC2SMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_IntoRoomS2cMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_BattleEntity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_CreateAllBattleEntitiesS2CMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_TurnInfoS2CMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_CastOperationC2SMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::usercmd::_OperationResultS2CMsg_default_instance_),
};

const char descriptor_table_protodef_base_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nbase.proto\022\007usercmd\"\033\n\013LoginC2SMsg\022\014\n\004"
  "name\030\001 \001(\t\"\037\n\013LoginS2CMsg\022\020\n\010playerId\030\001 "
  "\001(\r\"\020\n\016IntoRoomC2SMsg\" \n\016IntoRoomS2cMsg\022"
  "\016\n\006RoomId\030\001 \001(\r\"\261\001\n\014BattleEntity\022\020\n\010PosI"
  "ndex\030\001 \001(\r\022\022\n\nEntityType\030\002 \001(\r\022\016\n\006Health"
  "\030\003 \001(\r\022\026\n\016PhysicalAttack\030\004 \001(\r\022\023\n\013MagicA"
  "ttack\030\005 \001(\r\022\026\n\016PhysicalDefend\030\006 \001(\r\022\023\n\013M"
  "agicDefend\030\007 \001(\r\022\021\n\tMoveSpeed\030\010 \001(\r\"H\n\035C"
  "reateAllBattleEntitiesS2CMsg\022\'\n\010entities"
  "\030\001 \003(\0132\025.usercmd.BattleEntity\"o\n\016TurnInf"
  "oS2CMsg\022\024\n\014BigTurnIndex\030\001 \001(\r\022\026\n\016SmallTu"
  "rnIndex\030\002 \001(\r\022\031\n\021CurEntityPosIndex\030\003 \001(\r"
  "\022\024\n\014OperationSet\030\004 \003(\r\"=\n\023CastOperationC"
  "2SMsg\022\023\n\013OperationId\030\001 \001(\r\022\021\n\tTargetIds\030"
  "\002 \003(\r\"\027\n\025OperationResultS2CMsg*\256\001\n\007UserC"
  "md\022\014\n\010LoginReq\020\000\022\014\n\010LoginRes\020\001\022\017\n\013IntoRo"
  "omReq\020\002\022\017\n\013IntoRoomRes\020\003\022\033\n\027CreateAllBat"
  "tleEntities\020\004\022\014\n\010TurnInfo\020\005\022\024\n\020CastOpera"
  "tionReq\020\006\022\026\n\022OperationResultRes\020\007\022\014\n\010Max"
  "CmdId\020\010*d\n\010PosIndex\022\014\n\010PosELeft\020\000\022\016\n\nPos"
  "ECenter\020\001\022\r\n\tPosERight\020\002\022\014\n\010PosBLeft\020\003\022\016"
  "\n\nPosBCenter\020\004\022\r\n\tPosBRight\020\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_base_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_base_2eproto_sccs[9] = {
  &scc_info_BattleEntity_base_2eproto.base,
  &scc_info_CastOperationC2SMsg_base_2eproto.base,
  &scc_info_CreateAllBattleEntitiesS2CMsg_base_2eproto.base,
  &scc_info_IntoRoomC2SMsg_base_2eproto.base,
  &scc_info_IntoRoomS2cMsg_base_2eproto.base,
  &scc_info_LoginC2SMsg_base_2eproto.base,
  &scc_info_LoginS2CMsg_base_2eproto.base,
  &scc_info_OperationResultS2CMsg_base_2eproto.base,
  &scc_info_TurnInfoS2CMsg_base_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_base_2eproto_once;
static bool descriptor_table_base_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_base_2eproto = {
  &descriptor_table_base_2eproto_initialized, descriptor_table_protodef_base_2eproto, "base.proto", 877,
  &descriptor_table_base_2eproto_once, descriptor_table_base_2eproto_sccs, descriptor_table_base_2eproto_deps, 9, 0,
  schemas, file_default_instances, TableStruct_base_2eproto::offsets,
  file_level_metadata_base_2eproto, 9, file_level_enum_descriptors_base_2eproto, file_level_service_descriptors_base_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_base_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_base_2eproto), true);
namespace usercmd {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserCmd_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_base_2eproto);
  return file_level_enum_descriptors_base_2eproto[0];
}
bool UserCmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PosIndex_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_base_2eproto);
  return file_level_enum_descriptors_base_2eproto[1];
}
bool PosIndex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LoginC2SMsg::InitAsDefaultInstance() {
}
class LoginC2SMsg::_Internal {
 public:
};

LoginC2SMsg::LoginC2SMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.LoginC2SMsg)
}
LoginC2SMsg::LoginC2SMsg(const LoginC2SMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:usercmd.LoginC2SMsg)
}

void LoginC2SMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoginC2SMsg_base_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LoginC2SMsg::~LoginC2SMsg() {
  // @@protoc_insertion_point(destructor:usercmd.LoginC2SMsg)
  SharedDtor();
}

void LoginC2SMsg::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoginC2SMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginC2SMsg& LoginC2SMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginC2SMsg_base_2eproto.base);
  return *internal_default_instance();
}


void LoginC2SMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.LoginC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginC2SMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "usercmd.LoginC2SMsg.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginC2SMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.LoginC2SMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "usercmd.LoginC2SMsg.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.LoginC2SMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.LoginC2SMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginC2SMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.LoginC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usercmd.LoginC2SMsg.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.LoginC2SMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginC2SMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.LoginC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "usercmd.LoginC2SMsg.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.LoginC2SMsg)
  return target;
}

size_t LoginC2SMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.LoginC2SMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginC2SMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.LoginC2SMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginC2SMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginC2SMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.LoginC2SMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.LoginC2SMsg)
    MergeFrom(*source);
  }
}

void LoginC2SMsg::MergeFrom(const LoginC2SMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.LoginC2SMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void LoginC2SMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.LoginC2SMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginC2SMsg::CopyFrom(const LoginC2SMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.LoginC2SMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginC2SMsg::IsInitialized() const {
  return true;
}

void LoginC2SMsg::InternalSwap(LoginC2SMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginC2SMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoginS2CMsg::InitAsDefaultInstance() {
}
class LoginS2CMsg::_Internal {
 public:
};

LoginS2CMsg::LoginS2CMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.LoginS2CMsg)
}
LoginS2CMsg::LoginS2CMsg(const LoginS2CMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:usercmd.LoginS2CMsg)
}

void LoginS2CMsg::SharedCtor() {
  playerid_ = 0u;
}

LoginS2CMsg::~LoginS2CMsg() {
  // @@protoc_insertion_point(destructor:usercmd.LoginS2CMsg)
  SharedDtor();
}

void LoginS2CMsg::SharedDtor() {
}

void LoginS2CMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginS2CMsg& LoginS2CMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoginS2CMsg_base_2eproto.base);
  return *internal_default_instance();
}


void LoginS2CMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.LoginS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginS2CMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 playerId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          playerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginS2CMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.LoginS2CMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 playerId = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.LoginS2CMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.LoginS2CMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginS2CMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.LoginS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 playerId = 1;
  if (this->playerid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.LoginS2CMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* LoginS2CMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.LoginS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 playerId = 1;
  if (this->playerid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.LoginS2CMsg)
  return target;
}

size_t LoginS2CMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.LoginS2CMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 playerId = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginS2CMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.LoginS2CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginS2CMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoginS2CMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.LoginS2CMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.LoginS2CMsg)
    MergeFrom(*source);
  }
}

void LoginS2CMsg::MergeFrom(const LoginS2CMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.LoginS2CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void LoginS2CMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.LoginS2CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginS2CMsg::CopyFrom(const LoginS2CMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.LoginS2CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginS2CMsg::IsInitialized() const {
  return true;
}

void LoginS2CMsg::InternalSwap(LoginS2CMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(playerid_, other->playerid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginS2CMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntoRoomC2SMsg::InitAsDefaultInstance() {
}
class IntoRoomC2SMsg::_Internal {
 public:
};

IntoRoomC2SMsg::IntoRoomC2SMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.IntoRoomC2SMsg)
}
IntoRoomC2SMsg::IntoRoomC2SMsg(const IntoRoomC2SMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usercmd.IntoRoomC2SMsg)
}

void IntoRoomC2SMsg::SharedCtor() {
}

IntoRoomC2SMsg::~IntoRoomC2SMsg() {
  // @@protoc_insertion_point(destructor:usercmd.IntoRoomC2SMsg)
  SharedDtor();
}

void IntoRoomC2SMsg::SharedDtor() {
}

void IntoRoomC2SMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntoRoomC2SMsg& IntoRoomC2SMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntoRoomC2SMsg_base_2eproto.base);
  return *internal_default_instance();
}


void IntoRoomC2SMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.IntoRoomC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntoRoomC2SMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntoRoomC2SMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.IntoRoomC2SMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.IntoRoomC2SMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.IntoRoomC2SMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntoRoomC2SMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.IntoRoomC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.IntoRoomC2SMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* IntoRoomC2SMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.IntoRoomC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.IntoRoomC2SMsg)
  return target;
}

size_t IntoRoomC2SMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.IntoRoomC2SMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntoRoomC2SMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.IntoRoomC2SMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const IntoRoomC2SMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntoRoomC2SMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.IntoRoomC2SMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.IntoRoomC2SMsg)
    MergeFrom(*source);
  }
}

void IntoRoomC2SMsg::MergeFrom(const IntoRoomC2SMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.IntoRoomC2SMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IntoRoomC2SMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.IntoRoomC2SMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntoRoomC2SMsg::CopyFrom(const IntoRoomC2SMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.IntoRoomC2SMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntoRoomC2SMsg::IsInitialized() const {
  return true;
}

void IntoRoomC2SMsg::InternalSwap(IntoRoomC2SMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntoRoomC2SMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IntoRoomS2cMsg::InitAsDefaultInstance() {
}
class IntoRoomS2cMsg::_Internal {
 public:
};

IntoRoomS2cMsg::IntoRoomS2cMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.IntoRoomS2cMsg)
}
IntoRoomS2cMsg::IntoRoomS2cMsg(const IntoRoomS2cMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:usercmd.IntoRoomS2cMsg)
}

void IntoRoomS2cMsg::SharedCtor() {
  roomid_ = 0u;
}

IntoRoomS2cMsg::~IntoRoomS2cMsg() {
  // @@protoc_insertion_point(destructor:usercmd.IntoRoomS2cMsg)
  SharedDtor();
}

void IntoRoomS2cMsg::SharedDtor() {
}

void IntoRoomS2cMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntoRoomS2cMsg& IntoRoomS2cMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntoRoomS2cMsg_base_2eproto.base);
  return *internal_default_instance();
}


void IntoRoomS2cMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.IntoRoomS2cMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IntoRoomS2cMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 RoomId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IntoRoomS2cMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.IntoRoomS2cMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RoomId = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.IntoRoomS2cMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.IntoRoomS2cMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IntoRoomS2cMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.IntoRoomS2cMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RoomId = 1;
  if (this->roomid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.IntoRoomS2cMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* IntoRoomS2cMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.IntoRoomS2cMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RoomId = 1;
  if (this->roomid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.IntoRoomS2cMsg)
  return target;
}

size_t IntoRoomS2cMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.IntoRoomS2cMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RoomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntoRoomS2cMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.IntoRoomS2cMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const IntoRoomS2cMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntoRoomS2cMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.IntoRoomS2cMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.IntoRoomS2cMsg)
    MergeFrom(*source);
  }
}

void IntoRoomS2cMsg::MergeFrom(const IntoRoomS2cMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.IntoRoomS2cMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void IntoRoomS2cMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.IntoRoomS2cMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntoRoomS2cMsg::CopyFrom(const IntoRoomS2cMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.IntoRoomS2cMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntoRoomS2cMsg::IsInitialized() const {
  return true;
}

void IntoRoomS2cMsg::InternalSwap(IntoRoomS2cMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(roomid_, other->roomid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntoRoomS2cMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BattleEntity::InitAsDefaultInstance() {
}
class BattleEntity::_Internal {
 public:
};

BattleEntity::BattleEntity()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.BattleEntity)
}
BattleEntity::BattleEntity(const BattleEntity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&posindex_, &from.posindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&movespeed_) -
    reinterpret_cast<char*>(&posindex_)) + sizeof(movespeed_));
  // @@protoc_insertion_point(copy_constructor:usercmd.BattleEntity)
}

void BattleEntity::SharedCtor() {
  ::memset(&posindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&movespeed_) -
      reinterpret_cast<char*>(&posindex_)) + sizeof(movespeed_));
}

BattleEntity::~BattleEntity() {
  // @@protoc_insertion_point(destructor:usercmd.BattleEntity)
  SharedDtor();
}

void BattleEntity::SharedDtor() {
}

void BattleEntity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BattleEntity& BattleEntity::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BattleEntity_base_2eproto.base);
  return *internal_default_instance();
}


void BattleEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.BattleEntity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&posindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&movespeed_) -
      reinterpret_cast<char*>(&posindex_)) + sizeof(movespeed_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BattleEntity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 PosIndex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          posindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 EntityType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          entitytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Health = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          health_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 PhysicalAttack = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          physicalattack_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 MagicAttack = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          magicattack_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 PhysicalDefend = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          physicaldefend_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 MagicDefend = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          magicdefend_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 MoveSpeed = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          movespeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BattleEntity::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.BattleEntity)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 PosIndex = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &posindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntityType = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entitytype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Health = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &health_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PhysicalAttack = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &physicalattack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MagicAttack = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magicattack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PhysicalDefend = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &physicaldefend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MagicDefend = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magicdefend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MoveSpeed = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &movespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.BattleEntity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.BattleEntity)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BattleEntity::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.BattleEntity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PosIndex = 1;
  if (this->posindex() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->posindex(), output);
  }

  // uint32 EntityType = 2;
  if (this->entitytype() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->entitytype(), output);
  }

  // uint32 Health = 3;
  if (this->health() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->health(), output);
  }

  // uint32 PhysicalAttack = 4;
  if (this->physicalattack() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(4, this->physicalattack(), output);
  }

  // uint32 MagicAttack = 5;
  if (this->magicattack() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(5, this->magicattack(), output);
  }

  // uint32 PhysicalDefend = 6;
  if (this->physicaldefend() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(6, this->physicaldefend(), output);
  }

  // uint32 MagicDefend = 7;
  if (this->magicdefend() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(7, this->magicdefend(), output);
  }

  // uint32 MoveSpeed = 8;
  if (this->movespeed() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(8, this->movespeed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.BattleEntity)
}

::PROTOBUF_NAMESPACE_ID::uint8* BattleEntity::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.BattleEntity)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PosIndex = 1;
  if (this->posindex() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->posindex(), target);
  }

  // uint32 EntityType = 2;
  if (this->entitytype() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->entitytype(), target);
  }

  // uint32 Health = 3;
  if (this->health() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->health(), target);
  }

  // uint32 PhysicalAttack = 4;
  if (this->physicalattack() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->physicalattack(), target);
  }

  // uint32 MagicAttack = 5;
  if (this->magicattack() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->magicattack(), target);
  }

  // uint32 PhysicalDefend = 6;
  if (this->physicaldefend() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->physicaldefend(), target);
  }

  // uint32 MagicDefend = 7;
  if (this->magicdefend() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->magicdefend(), target);
  }

  // uint32 MoveSpeed = 8;
  if (this->movespeed() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->movespeed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.BattleEntity)
  return target;
}

size_t BattleEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.BattleEntity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 PosIndex = 1;
  if (this->posindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->posindex());
  }

  // uint32 EntityType = 2;
  if (this->entitytype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->entitytype());
  }

  // uint32 Health = 3;
  if (this->health() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->health());
  }

  // uint32 PhysicalAttack = 4;
  if (this->physicalattack() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->physicalattack());
  }

  // uint32 MagicAttack = 5;
  if (this->magicattack() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->magicattack());
  }

  // uint32 PhysicalDefend = 6;
  if (this->physicaldefend() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->physicaldefend());
  }

  // uint32 MagicDefend = 7;
  if (this->magicdefend() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->magicdefend());
  }

  // uint32 MoveSpeed = 8;
  if (this->movespeed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->movespeed());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BattleEntity::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.BattleEntity)
  GOOGLE_DCHECK_NE(&from, this);
  const BattleEntity* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BattleEntity>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.BattleEntity)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.BattleEntity)
    MergeFrom(*source);
  }
}

void BattleEntity::MergeFrom(const BattleEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.BattleEntity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.posindex() != 0) {
    set_posindex(from.posindex());
  }
  if (from.entitytype() != 0) {
    set_entitytype(from.entitytype());
  }
  if (from.health() != 0) {
    set_health(from.health());
  }
  if (from.physicalattack() != 0) {
    set_physicalattack(from.physicalattack());
  }
  if (from.magicattack() != 0) {
    set_magicattack(from.magicattack());
  }
  if (from.physicaldefend() != 0) {
    set_physicaldefend(from.physicaldefend());
  }
  if (from.magicdefend() != 0) {
    set_magicdefend(from.magicdefend());
  }
  if (from.movespeed() != 0) {
    set_movespeed(from.movespeed());
  }
}

void BattleEntity::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.BattleEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleEntity::CopyFrom(const BattleEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.BattleEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleEntity::IsInitialized() const {
  return true;
}

void BattleEntity::InternalSwap(BattleEntity* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(posindex_, other->posindex_);
  swap(entitytype_, other->entitytype_);
  swap(health_, other->health_);
  swap(physicalattack_, other->physicalattack_);
  swap(magicattack_, other->magicattack_);
  swap(physicaldefend_, other->physicaldefend_);
  swap(magicdefend_, other->magicdefend_);
  swap(movespeed_, other->movespeed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BattleEntity::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateAllBattleEntitiesS2CMsg::InitAsDefaultInstance() {
}
class CreateAllBattleEntitiesS2CMsg::_Internal {
 public:
};

CreateAllBattleEntitiesS2CMsg::CreateAllBattleEntitiesS2CMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.CreateAllBattleEntitiesS2CMsg)
}
CreateAllBattleEntitiesS2CMsg::CreateAllBattleEntitiesS2CMsg(const CreateAllBattleEntitiesS2CMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      entities_(from.entities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usercmd.CreateAllBattleEntitiesS2CMsg)
}

void CreateAllBattleEntitiesS2CMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateAllBattleEntitiesS2CMsg_base_2eproto.base);
}

CreateAllBattleEntitiesS2CMsg::~CreateAllBattleEntitiesS2CMsg() {
  // @@protoc_insertion_point(destructor:usercmd.CreateAllBattleEntitiesS2CMsg)
  SharedDtor();
}

void CreateAllBattleEntitiesS2CMsg::SharedDtor() {
}

void CreateAllBattleEntitiesS2CMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateAllBattleEntitiesS2CMsg& CreateAllBattleEntitiesS2CMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateAllBattleEntitiesS2CMsg_base_2eproto.base);
  return *internal_default_instance();
}


void CreateAllBattleEntitiesS2CMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entities_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateAllBattleEntitiesS2CMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .usercmd.BattleEntity entities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_entities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateAllBattleEntitiesS2CMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .usercmd.BattleEntity entities = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.CreateAllBattleEntitiesS2CMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.CreateAllBattleEntitiesS2CMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateAllBattleEntitiesS2CMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usercmd.BattleEntity entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entities(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.CreateAllBattleEntitiesS2CMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateAllBattleEntitiesS2CMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .usercmd.BattleEntity entities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entities_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entities(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.CreateAllBattleEntitiesS2CMsg)
  return target;
}

size_t CreateAllBattleEntitiesS2CMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .usercmd.BattleEntity entities = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->entities(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateAllBattleEntitiesS2CMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAllBattleEntitiesS2CMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateAllBattleEntitiesS2CMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.CreateAllBattleEntitiesS2CMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.CreateAllBattleEntitiesS2CMsg)
    MergeFrom(*source);
  }
}

void CreateAllBattleEntitiesS2CMsg::MergeFrom(const CreateAllBattleEntitiesS2CMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entities_.MergeFrom(from.entities_);
}

void CreateAllBattleEntitiesS2CMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAllBattleEntitiesS2CMsg::CopyFrom(const CreateAllBattleEntitiesS2CMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.CreateAllBattleEntitiesS2CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAllBattleEntitiesS2CMsg::IsInitialized() const {
  return true;
}

void CreateAllBattleEntitiesS2CMsg::InternalSwap(CreateAllBattleEntitiesS2CMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&entities_)->InternalSwap(CastToBase(&other->entities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateAllBattleEntitiesS2CMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TurnInfoS2CMsg::InitAsDefaultInstance() {
}
class TurnInfoS2CMsg::_Internal {
 public:
};

TurnInfoS2CMsg::TurnInfoS2CMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.TurnInfoS2CMsg)
}
TurnInfoS2CMsg::TurnInfoS2CMsg(const TurnInfoS2CMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      operationset_(from.operationset_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bigturnindex_, &from.bigturnindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&curentityposindex_) -
    reinterpret_cast<char*>(&bigturnindex_)) + sizeof(curentityposindex_));
  // @@protoc_insertion_point(copy_constructor:usercmd.TurnInfoS2CMsg)
}

void TurnInfoS2CMsg::SharedCtor() {
  ::memset(&bigturnindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&curentityposindex_) -
      reinterpret_cast<char*>(&bigturnindex_)) + sizeof(curentityposindex_));
}

TurnInfoS2CMsg::~TurnInfoS2CMsg() {
  // @@protoc_insertion_point(destructor:usercmd.TurnInfoS2CMsg)
  SharedDtor();
}

void TurnInfoS2CMsg::SharedDtor() {
}

void TurnInfoS2CMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TurnInfoS2CMsg& TurnInfoS2CMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TurnInfoS2CMsg_base_2eproto.base);
  return *internal_default_instance();
}


void TurnInfoS2CMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.TurnInfoS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operationset_.Clear();
  ::memset(&bigturnindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&curentityposindex_) -
      reinterpret_cast<char*>(&bigturnindex_)) + sizeof(curentityposindex_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TurnInfoS2CMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 BigTurnIndex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          bigturnindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 SmallTurnIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          smallturnindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 CurEntityPosIndex = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          curentityposindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 OperationSet = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(mutable_operationset(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          add_operationset(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TurnInfoS2CMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.TurnInfoS2CMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 BigTurnIndex = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bigturnindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SmallTurnIndex = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &smallturnindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 CurEntityPosIndex = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &curentityposindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 OperationSet = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_operationset())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_operationset())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.TurnInfoS2CMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.TurnInfoS2CMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TurnInfoS2CMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.TurnInfoS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 BigTurnIndex = 1;
  if (this->bigturnindex() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->bigturnindex(), output);
  }

  // uint32 SmallTurnIndex = 2;
  if (this->smallturnindex() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->smallturnindex(), output);
  }

  // uint32 CurEntityPosIndex = 3;
  if (this->curentityposindex() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(3, this->curentityposindex(), output);
  }

  // repeated uint32 OperationSet = 4;
  if (this->operationset_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(4, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_operationset_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->operationset_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32NoTag(
      this->operationset(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.TurnInfoS2CMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* TurnInfoS2CMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.TurnInfoS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 BigTurnIndex = 1;
  if (this->bigturnindex() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->bigturnindex(), target);
  }

  // uint32 SmallTurnIndex = 2;
  if (this->smallturnindex() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->smallturnindex(), target);
  }

  // uint32 CurEntityPosIndex = 3;
  if (this->curentityposindex() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->curentityposindex(), target);
  }

  // repeated uint32 OperationSet = 4;
  if (this->operationset_size() > 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTagToArray(
      4,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream::WriteVarint32ToArray(
        _operationset_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->operationset_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.TurnInfoS2CMsg)
  return target;
}

size_t TurnInfoS2CMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.TurnInfoS2CMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 OperationSet = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->operationset_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _operationset_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint32 BigTurnIndex = 1;
  if (this->bigturnindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->bigturnindex());
  }

  // uint32 SmallTurnIndex = 2;
  if (this->smallturnindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->smallturnindex());
  }

  // uint32 CurEntityPosIndex = 3;
  if (this->curentityposindex() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->curentityposindex());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TurnInfoS2CMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.TurnInfoS2CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TurnInfoS2CMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TurnInfoS2CMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.TurnInfoS2CMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.TurnInfoS2CMsg)
    MergeFrom(*source);
  }
}

void TurnInfoS2CMsg::MergeFrom(const TurnInfoS2CMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.TurnInfoS2CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operationset_.MergeFrom(from.operationset_);
  if (from.bigturnindex() != 0) {
    set_bigturnindex(from.bigturnindex());
  }
  if (from.smallturnindex() != 0) {
    set_smallturnindex(from.smallturnindex());
  }
  if (from.curentityposindex() != 0) {
    set_curentityposindex(from.curentityposindex());
  }
}

void TurnInfoS2CMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.TurnInfoS2CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TurnInfoS2CMsg::CopyFrom(const TurnInfoS2CMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.TurnInfoS2CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TurnInfoS2CMsg::IsInitialized() const {
  return true;
}

void TurnInfoS2CMsg::InternalSwap(TurnInfoS2CMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  operationset_.InternalSwap(&other->operationset_);
  swap(bigturnindex_, other->bigturnindex_);
  swap(smallturnindex_, other->smallturnindex_);
  swap(curentityposindex_, other->curentityposindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TurnInfoS2CMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CastOperationC2SMsg::InitAsDefaultInstance() {
}
class CastOperationC2SMsg::_Internal {
 public:
};

CastOperationC2SMsg::CastOperationC2SMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.CastOperationC2SMsg)
}
CastOperationC2SMsg::CastOperationC2SMsg(const CastOperationC2SMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      targetids_(from.targetids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operationid_ = from.operationid_;
  // @@protoc_insertion_point(copy_constructor:usercmd.CastOperationC2SMsg)
}

void CastOperationC2SMsg::SharedCtor() {
  operationid_ = 0u;
}

CastOperationC2SMsg::~CastOperationC2SMsg() {
  // @@protoc_insertion_point(destructor:usercmd.CastOperationC2SMsg)
  SharedDtor();
}

void CastOperationC2SMsg::SharedDtor() {
}

void CastOperationC2SMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CastOperationC2SMsg& CastOperationC2SMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CastOperationC2SMsg_base_2eproto.base);
  return *internal_default_instance();
}


void CastOperationC2SMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.CastOperationC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetids_.Clear();
  operationid_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CastOperationC2SMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 OperationId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          operationid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 TargetIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(mutable_targetids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          add_targetids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CastOperationC2SMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.CastOperationC2SMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 OperationId = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 TargetIds = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_targetids())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_targetids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.CastOperationC2SMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.CastOperationC2SMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CastOperationC2SMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.CastOperationC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 OperationId = 1;
  if (this->operationid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->operationid(), output);
  }

  // repeated uint32 TargetIds = 2;
  if (this->targetids_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(2, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_targetids_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->targetids_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32NoTag(
      this->targetids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.CastOperationC2SMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* CastOperationC2SMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.CastOperationC2SMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 OperationId = 1;
  if (this->operationid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->operationid(), target);
  }

  // repeated uint32 TargetIds = 2;
  if (this->targetids_size() > 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTagToArray(
      2,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream::WriteVarint32ToArray(
        _targetids_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->targetids_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.CastOperationC2SMsg)
  return target;
}

size_t CastOperationC2SMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.CastOperationC2SMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 TargetIds = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->targetids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _targetids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint32 OperationId = 1;
  if (this->operationid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->operationid());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CastOperationC2SMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.CastOperationC2SMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CastOperationC2SMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CastOperationC2SMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.CastOperationC2SMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.CastOperationC2SMsg)
    MergeFrom(*source);
  }
}

void CastOperationC2SMsg::MergeFrom(const CastOperationC2SMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.CastOperationC2SMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targetids_.MergeFrom(from.targetids_);
  if (from.operationid() != 0) {
    set_operationid(from.operationid());
  }
}

void CastOperationC2SMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.CastOperationC2SMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CastOperationC2SMsg::CopyFrom(const CastOperationC2SMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.CastOperationC2SMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CastOperationC2SMsg::IsInitialized() const {
  return true;
}

void CastOperationC2SMsg::InternalSwap(CastOperationC2SMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  targetids_.InternalSwap(&other->targetids_);
  swap(operationid_, other->operationid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CastOperationC2SMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OperationResultS2CMsg::InitAsDefaultInstance() {
}
class OperationResultS2CMsg::_Internal {
 public:
};

OperationResultS2CMsg::OperationResultS2CMsg()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:usercmd.OperationResultS2CMsg)
}
OperationResultS2CMsg::OperationResultS2CMsg(const OperationResultS2CMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:usercmd.OperationResultS2CMsg)
}

void OperationResultS2CMsg::SharedCtor() {
}

OperationResultS2CMsg::~OperationResultS2CMsg() {
  // @@protoc_insertion_point(destructor:usercmd.OperationResultS2CMsg)
  SharedDtor();
}

void OperationResultS2CMsg::SharedDtor() {
}

void OperationResultS2CMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperationResultS2CMsg& OperationResultS2CMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperationResultS2CMsg_base_2eproto.base);
  return *internal_default_instance();
}


void OperationResultS2CMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:usercmd.OperationResultS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OperationResultS2CMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OperationResultS2CMsg::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:usercmd.OperationResultS2CMsg)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:usercmd.OperationResultS2CMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:usercmd.OperationResultS2CMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OperationResultS2CMsg::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:usercmd.OperationResultS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:usercmd.OperationResultS2CMsg)
}

::PROTOBUF_NAMESPACE_ID::uint8* OperationResultS2CMsg::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:usercmd.OperationResultS2CMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:usercmd.OperationResultS2CMsg)
  return target;
}

size_t OperationResultS2CMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:usercmd.OperationResultS2CMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationResultS2CMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:usercmd.OperationResultS2CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationResultS2CMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperationResultS2CMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:usercmd.OperationResultS2CMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:usercmd.OperationResultS2CMsg)
    MergeFrom(*source);
  }
}

void OperationResultS2CMsg::MergeFrom(const OperationResultS2CMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:usercmd.OperationResultS2CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OperationResultS2CMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:usercmd.OperationResultS2CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationResultS2CMsg::CopyFrom(const OperationResultS2CMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:usercmd.OperationResultS2CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationResultS2CMsg::IsInitialized() const {
  return true;
}

void OperationResultS2CMsg::InternalSwap(OperationResultS2CMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationResultS2CMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace usercmd
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::usercmd::LoginC2SMsg* Arena::CreateMaybeMessage< ::usercmd::LoginC2SMsg >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::LoginC2SMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::usercmd::LoginS2CMsg* Arena::CreateMaybeMessage< ::usercmd::LoginS2CMsg >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::LoginS2CMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::usercmd::IntoRoomC2SMsg* Arena::CreateMaybeMessage< ::usercmd::IntoRoomC2SMsg >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::IntoRoomC2SMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::usercmd::IntoRoomS2cMsg* Arena::CreateMaybeMessage< ::usercmd::IntoRoomS2cMsg >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::IntoRoomS2cMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::usercmd::BattleEntity* Arena::CreateMaybeMessage< ::usercmd::BattleEntity >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::BattleEntity >(arena);
}
template<> PROTOBUF_NOINLINE ::usercmd::CreateAllBattleEntitiesS2CMsg* Arena::CreateMaybeMessage< ::usercmd::CreateAllBattleEntitiesS2CMsg >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::CreateAllBattleEntitiesS2CMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::usercmd::TurnInfoS2CMsg* Arena::CreateMaybeMessage< ::usercmd::TurnInfoS2CMsg >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::TurnInfoS2CMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::usercmd::CastOperationC2SMsg* Arena::CreateMaybeMessage< ::usercmd::CastOperationC2SMsg >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::CastOperationC2SMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::usercmd::OperationResultS2CMsg* Arena::CreateMaybeMessage< ::usercmd::OperationResultS2CMsg >(Arena* arena) {
  return Arena::CreateInternal< ::usercmd::OperationResultS2CMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
